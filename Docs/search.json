{"Typealiases.html#/s:9NeuralKit13CGImageFilter":{"name":"CGImageFilter","abstract":"<p>Filter for image preprocessing</p>"},"Structs/TrainingSample.html#/s:vV9NeuralKit14TrainingSample6valuesVS_7Matrix3":{"name":"values","abstract":"<p>Values of the sample in a three dimensional matrix</p>","parent_name":"TrainingSample"},"Structs/TrainingSample.html#/s:vV9NeuralKit14TrainingSample8expectedVS_7Matrix3":{"name":"expected","abstract":"<p>Expected output values towards which a network can be trained</p>","parent_name":"TrainingSample"},"Structs/TrainingSample.html#/s:FV9NeuralKit14TrainingSamplecFT6valuesVS_7Matrix38expectedS1__S0_":{"name":"init(values:expected:)","abstract":"<p>Initializes a training sample which can be used to train a neural","parent_name":"TrainingSample"},"Structs/TrainingSample.html#/s:FV9NeuralKit14TrainingSamplecFT6valuesVS_7Matrix311outputCountSi11targetIndexSi_S0_":{"name":"init(values:outputCount:targetIndex:)","abstract":"<p>Initializes a training sample from an input and an expected output","parent_name":"TrainingSample"},"Structs/InputSample.html#/s:vV9NeuralKit11InputSample6valuesVS_7Matrix3":{"name":"values","abstract":"<p>Values of the sample in a three dimensional matrix</p>","parent_name":"InputSample"},"Structs/InputSample.html#/s:FV9NeuralKit11InputSamplecFT6valuesVS_7Matrix3_S0_":{"name":"init(values:)","abstract":"<p>Initializes an input sample with the given value matrix.","parent_name":"InputSample"},"Structs/NeuralNetwork.html#/s:vV9NeuralKit13NeuralNetwork6layersGSaPS_11NeuralLayer__":{"name":"layers","abstract":"<p>Neuron layers of the network</p>","parent_name":"NeuralNetwork"},"Structs/NeuralNetwork.html#/s:vV9NeuralKit13NeuralNetwork24outputActivationFunctionFGSaSf_GSaSf_":{"name":"outputActivationFunction","abstract":"<p>Activation function at the output layer</p>","parent_name":"NeuralNetwork"},"Structs/NeuralNetwork.html#/s:vV9NeuralKit13NeuralNetwork26outputActivationDerivativeFGSaSf_GSaSf_":{"name":"outputActivationDerivative","abstract":"<p>Activation function derivative at the output layer</p>","parent_name":"NeuralNetwork"},"Structs/NeuralNetwork.html#/s:FV9NeuralKit13NeuralNetworkcFT6layersGSaPS_11NeuralLayer__16outputActivationGSqFGSaSf_GSaSf__26outputActivationDerivativeGSqFGSaSf_GSaSf___S0_":{"name":"init(layers:outputActivation:outputActivationDerivative:)","abstract":"<p>Creates a new neural network using the given layers and an activation function for the output layer.</p>","parent_name":"NeuralNetwork"},"Structs/NeuralNetwork.html#/s:FV9NeuralKit13NeuralNetwork11feedForwardFVS_7Matrix3S1_":{"name":"feedForward(_:)","abstract":"<p>Feeds a sample forward through the network.</p>","parent_name":"NeuralNetwork"},"Structs/NeuralNetwork.html#/s:FV9NeuralKit13NeuralNetwork5trainFTVS_14TrainingSample12learningRateSf_Sf":{"name":"train(_:learningRate:)","abstract":"<p>Trains a network to match a given training sample more closely","parent_name":"NeuralNetwork"},"Structs/Matrix3.html#/s:iV9NeuralKit7Matrix39subscriptFTSiSiSi_Sf":{"name":"subscript(_:_:_:)","abstract":"<p>Subscript to retrieve or set a single element of the matrix</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:iV9NeuralKit7Matrix39subscriptFT1xSi1ySi1zSi5widthSi6heightSi5depthSi_S0_":{"name":"subscript(x:y:z:width:height:depth:)","abstract":"<p>Subscript to retrieve or set a three dimensional submatrix of the matrix</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:vV9NeuralKit7Matrix39dimensionT5widthSi6heightSi5depthSi_":{"name":"dimension","abstract":"<p>Dimension of the tensor</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:vV9NeuralKit7Matrix37indicesGSaTSiSiSi__":{"name":"indices","abstract":"<p>Indices of the tensor in the form (column,row,slice)</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix3cFT6valuesGSaSf_5widthSi6heightSi5depthSi_S0_":{"name":"init(values:width:height:depth:)","abstract":"<p>Initializes a three dimensional matrix from the given values and dimensions</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix3cFT6valuesGSaGSaGSaSf____S0_":{"name":"init(values:)","abstract":"<p>Initializes a three dimensional matrix from a vector of slices.</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix3cFT9repeatingSf5widthSi6heightSi5depthSi_S0_":{"name":"init(repeating:width:height:depth:)","abstract":"<p>Initializes a three dimensional matrix and sets every value to the repeating value.</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix38convolveFT4withS0__Sf":{"name":"convolve(with:)","abstract":"<p>Performs a convolution.","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix38reversedFT_S0_":{"name":"reversed()","abstract":"<p>Reverses the matrix. The element at position (i,j,k) will be at (width-i,height-j,depth-k)","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix33mapFzFzSfSfS0_":{"name":"map(_:)","abstract":"<p>Returns a matrix generated from a matrix by applying the transform function to every element</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:FV9NeuralKit7Matrix34mapvFzFzGSaSf_GSaSf_S0_":{"name":"mapv(_:)","abstract":"<p>Returns a matrix generated from a matrix by applying the vectorized transform function to every element</p>","parent_name":"Matrix3"},"Structs/Matrix3.html#/s:vV9NeuralKit7Matrix311descriptionSS":{"name":"description","abstract":"<p>A textual representation of this instance.</p>","parent_name":"Matrix3"},"Structs/Matrix.html#/s:iV9NeuralKit6Matrix9subscriptFT3rowSi_GSaSf_":{"name":"subscript(row:)","abstract":"<p>Subscript for accessing a row of the matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:iV9NeuralKit6Matrix9subscriptFTSiSi_Sf":{"name":"subscript(_:_:)","abstract":"<p>Subscript for accessing a single field of the matrix","parent_name":"Matrix"},"Structs/Matrix.html#/s:iV9NeuralKit6Matrix9subscriptFT6columnSi_GSaSf_":{"name":"subscript(column:)","abstract":"<p>Subscript for accessing a column of the matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:iV9NeuralKit6Matrix9subscriptFT6columnSi3rowSi5widthSi6heightSi_S0_":{"name":"subscript(column:row:width:height:)","abstract":"<p>Subscript for accessing a submatrix of the matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:vV9NeuralKit6Matrix7indicesGSaTSiSi__":{"name":"indices","abstract":"Undocumented","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6MatrixcFT6valuesGSaSf_5widthSi6heightSi_S0_":{"name":"init(values:width:height:)","abstract":"<p>Creates a new matrix with a given width and height","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6MatrixcFT4rowsGSaGSaSf___S0_":{"name":"init(rows:)","abstract":"<p>Creates a new matrix with the given rows.</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6MatrixcFT9repeatingSf5widthSi6heightSi_S0_":{"name":"init(repeating:width:height:)","abstract":"<p>Initializes a matrix with the given dimensions and sets every value to the repeating value.</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:ZFV9NeuralKit6Matrixoi1mFTS0_S0__S0_":{"name":"*(_:_:)","abstract":"<p>Multiplies a matrix with another matrix.","parent_name":"Matrix"},"Structs/Matrix.html#/s:ZFV9NeuralKit6Matrixoi1mFTS0_GSaSf__GSaSf_":{"name":"*(_:_:)","abstract":"<p>Multiplies a matrix with a vector</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:ZFV9NeuralKit6Matrixoi1pFTS0_S0__S0_":{"name":"+(_:_:)","abstract":"<p>Performs an element wise addition of two matrices of equal dimensions</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:vV9NeuralKit6Matrix10transposedS0_":{"name":"transposed","abstract":"<p>The transposed matrix generated by swapping all fields (i,j) with (j,i).</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6Matrix8convolveFT4withS0__Sf":{"name":"convolve(with:)","abstract":"<p>Performs a convolution.","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6Matrix8reversedFT_S0_":{"name":"reversed()","abstract":"<p>Reverses the matrix. The element at position (i,j,k) will be at (width-i,height-j,depth-k)","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6Matrix3mapFzFzSfSfS0_":{"name":"map(_:)","abstract":"<p>Returns a matrix generated from a matrix by applying the transform function to every element</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:FV9NeuralKit6Matrix4mapvFzFzGSaSf_GSaSf_S0_":{"name":"mapv(_:)","abstract":"<p>Returns a matrix generated from a matrix by applying the vectorized transform function to every element</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:vV9NeuralKit6Matrix11descriptionSS":{"name":"description","abstract":"<p>A textual representation of this instance.</p>","parent_name":"Matrix"},"Structs/PoolingLayer.html#/s:vP9NeuralKit11NeuralLayer9inputSizeT5widthSi6heightSi5depthSi_":{"name":"inputSize","parent_name":"PoolingLayer"},"Structs/PoolingLayer.html#/s:vP9NeuralKit11NeuralLayer10outputSizeT5widthSi6heightSi5depthSi_":{"name":"outputSize","parent_name":"PoolingLayer"},"Structs/PoolingLayer.html#/s:FP9NeuralKit11NeuralLayer9activatedFVS_7Matrix3S1_":{"name":"activated(_:)","parent_name":"PoolingLayer"},"Structs/PoolingLayer.html#/s:FP9NeuralKit11NeuralLayer8weightedFVS_7Matrix3S1_":{"name":"weighted(_:)","parent_name":"PoolingLayer"},"Structs/PoolingLayer.html#/s:FP9NeuralKit11NeuralLayer13adjustWeightsFT15nextLayerErrorsVS_7Matrix37outputsS1_12learningRateSf_S1_":{"name":"adjustWeights(nextLayerErrors:outputs:learningRate:)","parent_name":"PoolingLayer"},"Structs/ConvolutionLayer.html#/s:vV9NeuralKit16ConvolutionLayer7kernelsGSaVS_6Matrix_":{"name":"kernels","abstract":"Undocumented","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:vV9NeuralKit16ConvolutionLayer4biasGSaSf_":{"name":"bias","abstract":"Undocumented","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:vP9NeuralKit11NeuralLayer9inputSizeT5widthSi6heightSi5depthSi_":{"name":"inputSize","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:vP9NeuralKit11NeuralLayer10outputSizeT5widthSi6heightSi5depthSi_":{"name":"outputSize","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:vV9NeuralKit16ConvolutionLayer18activationFunctionFGSaSf_GSaSf_":{"name":"activationFunction","abstract":"Undocumented","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:vV9NeuralKit16ConvolutionLayer20activationDerivativeFGSaSf_GSaSf_":{"name":"activationDerivative","abstract":"Undocumented","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:FP9NeuralKit11NeuralLayer9activatedFVS_7Matrix3S1_":{"name":"activated(_:)","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:FP9NeuralKit11NeuralLayer8weightedFVS_7Matrix3S1_":{"name":"weighted(_:)","parent_name":"ConvolutionLayer"},"Structs/ConvolutionLayer.html#/s:FP9NeuralKit11NeuralLayer13adjustWeightsFT15nextLayerErrorsVS_7Matrix37outputsS1_12learningRateSf_S1_":{"name":"adjustWeights(nextLayerErrors:outputs:learningRate:)","parent_name":"ConvolutionLayer"},"Structs/FullyConnectedLayer.html#/s:vV9NeuralKit19FullyConnectedLayer9inputSizeT5widthSi6heightSi5depthSi_":{"name":"inputSize","abstract":"<p>Input size of the layer.","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:vV9NeuralKit19FullyConnectedLayer10outputSizeT5widthSi6heightSi5depthSi_":{"name":"outputSize","abstract":"<p>Output size of the layer.","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:vV9NeuralKit19FullyConnectedLayer7weightsVS_6Matrix":{"name":"weights","abstract":"<p>Weights with which outputs of the layer are weighted when presented to the next layer</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:vV9NeuralKit19FullyConnectedLayer18activationFunctionFGSaSf_GSaSf_":{"name":"activationFunction","abstract":"<p>Activation function which will be applied to the inputs of the layer</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:vV9NeuralKit19FullyConnectedLayer20activationDerivativeFGSaSf_GSaSf_":{"name":"activationDerivative","abstract":"<p>Derivative of the activation function used for training the network.</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:FV9NeuralKit19FullyConnectedLayercFT7weightsVS_6Matrix18activationFunctionFGSaSf_GSaSf_20activationDerivativeFGSaSf_GSaSf__S0_":{"name":"init(weights:activationFunction:activationDerivative:)","abstract":"<p>Initializes a fully connected neural layer using the given weight matrix, its activation function and derivative</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:FV9NeuralKit19FullyConnectedLayer9activatedFVS_7Matrix3S1_":{"name":"activated(_:)","abstract":"<p>Calculates the activation function for all inputs of the layer</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:FV9NeuralKit19FullyConnectedLayer8weightedFVS_7Matrix3S1_":{"name":"weighted(_:)","abstract":"<p>Weighs the outputs of the activation function so it can be presented","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html#/s:FV9NeuralKit19FullyConnectedLayer13adjustWeightsFT15nextLayerErrorsVS_7Matrix37outputsS1_12learningRateSf_S1_":{"name":"adjustWeights(nextLayerErrors:outputs:learningRate:)","abstract":"<p>Adjusts the weights of the layer to reduce the error of the network.</p>","parent_name":"FullyConnectedLayer"},"Structs/FullyConnectedLayer.html":{"name":"FullyConnectedLayer","abstract":"<p>A fully connected layer of a neural network."},"Structs/ConvolutionLayer.html":{"name":"ConvolutionLayer","abstract":"Undocumented"},"Structs/PoolingLayer.html":{"name":"PoolingLayer","abstract":"Undocumented"},"Structs/Matrix.html":{"name":"Matrix","abstract":"<p>A two dimensional matrix</p>"},"Structs/Matrix3.html":{"name":"Matrix3","abstract":"<p>A 3 dimensional matrix (tensor)</p>"},"Structs/NeuralNetwork.html":{"name":"NeuralNetwork","abstract":"<p>A feed forward multi layer neural network</p>"},"Structs/InputSample.html":{"name":"InputSample","abstract":"<p>An input sample which can be forwarded through a neural network</p>"},"Structs/TrainingSample.html":{"name":"TrainingSample","abstract":"<p>A training sample which also provides an expected output</p>"},"Protocols/Sample.html#/s:vP9NeuralKit6Sample6valuesVS_7Matrix3":{"name":"values","abstract":"<p>Values of the sample in a three dimensional matrix</p>","parent_name":"Sample"},"Protocols/Sample.html#/s:ZFE9NeuralKitPS_6Sample9normalizeFT7samplesGSaVS_7Matrix3__TGSaS1__5scaleSf6offsetSf_":{"name":"normalize(samples:)","abstract":"<p>Normalizes a set of samples to a range from zero to one</p>","parent_name":"Sample"},"Protocols/Sample.html#/s:ZFE9NeuralKitPS_6Sample9normalizeFT7samplesGSaVS_7Matrix3_5scaleSf6offsetSf_GSaS1__":{"name":"normalize(samples:scale:offset:)","abstract":"<p>Normalizes a set of samples with a predetermined offset and factor.</p>","parent_name":"Sample"},"Protocols/Sample.html#/s:ZFE9NeuralKitPS_6Sample11denormalizeFT7samplesGSaVS_7Matrix3_5scaleSf6offsetSf_GSaS1__":{"name":"denormalize(samples:scale:offset:)","abstract":"<p>Denormalizes normalized samples back to their original ranges</p>","parent_name":"Sample"},"Protocols/Sample.html#/s:ZFE9NeuralKitPS_6Sample12encodeOneHotFT5countSi6targetSi_VS_7Matrix3":{"name":"encodeOneHot(count:target:)","abstract":"<p>Creates a one-hot-matrix of width 1, height 1 and depth equal to <code>count</code></p>","parent_name":"Sample"},"Protocols/NeuralLayer.html#/s:vP9NeuralKit11NeuralLayer9inputSizeT5widthSi6heightSi5depthSi_":{"name":"inputSize","abstract":"<p>Input size of the layer.","parent_name":"NeuralLayer"},"Protocols/NeuralLayer.html#/s:vP9NeuralKit11NeuralLayer10outputSizeT5widthSi6heightSi5depthSi_":{"name":"outputSize","abstract":"<p>Output size of the layer.","parent_name":"NeuralLayer"},"Protocols/NeuralLayer.html#/s:FP9NeuralKit11NeuralLayer9activatedFVS_7Matrix3S1_":{"name":"activated(_:)","abstract":"<p>Calculates the activation function for all inputs of the layer</p>","parent_name":"NeuralLayer"},"Protocols/NeuralLayer.html#/s:FP9NeuralKit11NeuralLayer8weightedFVS_7Matrix3S1_":{"name":"weighted(_:)","abstract":"<p>Weighs the outputs of the activation function so it can be presented","parent_name":"NeuralLayer"},"Protocols/NeuralLayer.html#/s:FP9NeuralKit11NeuralLayer13adjustWeightsFT15nextLayerErrorsVS_7Matrix37outputsS1_12learningRateSf_S1_":{"name":"adjustWeights(nextLayerErrors:outputs:learningRate:)","abstract":"<p>Adjusts the weights of the layer to reduce the error of the network.</p>","parent_name":"NeuralLayer"},"Protocols/NeuralLayer.html#/s:FE9NeuralKitPS_11NeuralLayer7forwardFVS_7Matrix3S1_":{"name":"forward(_:)","abstract":"<p>Forwards an input through the layer.</p>","parent_name":"NeuralLayer"},"Protocols/PixelDataConvertible.html#/s:vP9NeuralKit20PixelDataConvertible9pixelDataGSqGSaVs5UInt8__":{"name":"pixelData","abstract":"<p>pixel data of the image in raw 8 bit RGBA format</p>","parent_name":"PixelDataConvertible"},"Protocols/PixelDataConvertible.html#/s:vP9NeuralKit20PixelDataConvertible19normalizedPixelDataGSqGSaSf__":{"name":"normalizedPixelData","abstract":"<p>normalized pixel data.</p>","parent_name":"PixelDataConvertible"},"Protocols/PixelDataConvertible.html#/s:vP9NeuralKit20PixelDataConvertible6vImageGSqVSC13vImage_Buffer_":{"name":"vImage","abstract":"<p>vImage buffer containing the pixel data</p>","parent_name":"PixelDataConvertible"},"Protocols/PixelDataConvertible.html":{"name":"PixelDataConvertible","abstract":"<p>Protocol for retrieving pixel data from an object.</p>"},"Protocols/NeuralLayer.html":{"name":"NeuralLayer","abstract":"<p>A layer of a feed forward neural network</p>"},"Protocols/Sample.html":{"name":"Sample","abstract":"<p>A sample which can be forwarded through a neural network.</p>"},"Functions.html#/s:F9NeuralKitoi1pFTFCSo7CGImageS0_FS0_S0__FS0_S0_":{"name":"+(_:_:)","abstract":"<p>Appends the right CGImageFilter to the left CGImageFilter.</p>"},"Functions.html#/s:F9NeuralKit25CGImageFilterAppendFilterFT6filterFCSo7CGImageS0_8toFilterFS0_S0__FS0_S0_":{"name":"CGImageFilterAppendFilter(filter:toFilter:)","abstract":"<p>Appends the first CGImageFilter to the second CGImageFilter.</p>"},"Functions.html#/s:F9NeuralKit18RandomWeightMatrixFT5widthSi6heightSi5depthSi5rangeGVs11ClosedRangeSf__VS_7Matrix3":{"name":"RandomWeightMatrix(width:height:depth:range:)","abstract":"<p>Creates a three dimensional weight matrix"},"Functions.html#/s:F9NeuralKit18RandomWeightMatrixFT5widthSi6heightSi5rangeGVs11ClosedRangeSf__VS_6Matrix":{"name":"RandomWeightMatrix(width:height:range:)","abstract":"<p>Creates a weight matrix"},"Functions.html#/s:F9NeuralKitop1sFGSaSf_GSaSf_":{"name":"-(_:)","abstract":"<p>Negates every element of the input vector</p>"},"Functions.html#/s:F9NeuralKitoi1mFTGSaSf_GSaSf__Sf":{"name":"*(_:_:)","abstract":"<p>Calculates the dot product of two vectors.</p>"},"Functions.html#/s:F9NeuralKitoi2apFTGSaSf_GSaSf__GSaSf_":{"name":"&+(_:_:)","abstract":"<p>Performs a component wise addition of two input vectors</p>"},"Functions.html#/s:F9NeuralKitoi2asFTGSaSf_GSaSf__GSaSf_":{"name":"&-(_:_:)","abstract":"<p>Performs a component wise subtraction of two input vectors</p>"},"Functions.html#/s:F9NeuralKitoi2amFTGSaSf_GSaSf__GSaSf_":{"name":"&*(_:_:)","abstract":"<p>Performs a component wise multiplication of two input vectors</p>"},"Functions.html#/s:F9NeuralKitoi2adFTGSaSf_GSaSf__GSaSf_":{"name":"&/(_:_:)","abstract":"<p>Performs a component wise division of two input vectors</p>"},"Functions.html#/s:F9NeuralKitoi2apFTGSaSf_Sf_GSaSf_":{"name":"&+(_:_:)","abstract":"<p>Performs a component wise addition of an input vector with a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2asFTGSaSf_Sf_GSaSf_":{"name":"&-(_:_:)","abstract":"<p>Performs a component wise subtraction of an input vector with a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2amFTGSaSf_Sf_GSaSf_":{"name":"&*(_:_:)","abstract":"<p>Performs a component wise multiplication of an input vector with a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2adFTGSaSf_Sf_GSaSf_":{"name":"&/(_:_:)","abstract":"<p>Performs a component wise division of an input vector with a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2apFTSfGSaSf__GSaSf_":{"name":"&+(_:_:)","abstract":"<p>Performs a component wise addition of an input vector and a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2asFTSfGSaSf__GSaSf_":{"name":"&-(_:_:)","abstract":"<p>Performs a component wise subtraction of an input scalar and a vector</p>"},"Functions.html#/s:F9NeuralKitoi2amFTSfGSaSf__GSaSf_":{"name":"&*(_:_:)","abstract":"<p>Performs a component wise multiplication of an input vector and a scalar</p>"},"Functions.html#/s:F9NeuralKitoi2adFTSfGSaSf__GSaSf_":{"name":"&/(_:_:)","abstract":"<p>Performs a component wise division of an input scalar and a vector</p>"},"Functions.html#/s:F9NeuralKit4sqrtFGSaSf_GSaSf_":{"name":"sqrt(_:)","abstract":"<p>Calculates the element wise square root of an input vector</p>"},"Functions.html#/s:F9NeuralKit3expFGSaSf_GSaSf_":{"name":"exp(_:)","abstract":"<p>Calculates the exponential function e^x for every element x of the input vector</p>"},"Functions.html#/s:F9NeuralKit4tanhFGSaSf_GSaSf_":{"name":"tanh(_:)","abstract":"<p>Calculates the tangens hyperbolicus for every element of the input vector</p>"},"Functions.html#/s:F9NeuralKit10tanh_derivFGSaSf_GSaSf_":{"name":"tanh_deriv(_:)","abstract":"<p>Calculates the derivative of the tangens hyperbolicus for every element of the input vector.</p>"},"Functions.html#/s:F9NeuralKit3logFGSaSf_GSaSf_":{"name":"log(_:)","abstract":"<p>Calcualtes the natural logarithm of every element of the input vector</p>"},"Functions.html#/s:F9NeuralKit4reluFGSaSf_GSaSf_":{"name":"relu(_:)","abstract":"<p>Computes a rectified linear unit activation function"},"Functions.html#/s:F9NeuralKit10relu_derivFGSaSf_GSaSf_":{"name":"relu_deriv(_:)","abstract":"<p>Computes the derivative of a rectified linear unit activation function"},"Functions.html#/s:F9NeuralKit8identityFGSaSf_GSaSf_":{"name":"identity(_:)","abstract":"<p>Returns the unchanged input values</p>"},"Functions.html#/s:F9NeuralKit4onesFGSaSf_GSaSf_":{"name":"ones(_:)","abstract":"<p>Returns a vector containing ones with the same length as the input vector</p>"},"Functions.html#/s:F9NeuralKit7sigmoidFGSaSf_GSaSf_":{"name":"sigmoid(_:)","abstract":"<p>Calculates the sigmoid function for every element of the input vector</p>"},"Functions.html#/s:F9NeuralKit13sigmoid_derivFGSaSf_GSaSf_":{"name":"sigmoid_deriv(_:)","abstract":"<p>Calculates the derivative of the sigmoid function of the input vector."},"Extensions/CGImage.html#/s:FE9NeuralKitCSo7CGImage6scaledFT6toSizeVSC6CGSize_GSqS0__":{"name":"scaled(toSize:)","abstract":"<p>Scales the current bitmap image to the desired size.</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:vE9NeuralKitCSo7CGImage9pixelDataGSqGSaVs5UInt8__":{"name":"pixelData","abstract":"<p>pixel data of the image in raw 8 bit RGBA format</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:vE9NeuralKitCSo7CGImage19normalizedPixelDataGSqGSaSf__":{"name":"normalizedPixelData","abstract":"<p>normalized pixel data.</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:vE9NeuralKitCSo7CGImage28normalizedGreyscalePixelDataGSqGSaSf__":{"name":"normalizedGreyscalePixelData","abstract":"<p>Normalized greyscale pixel data.</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:vE9NeuralKitCSo7CGImage6vImageGSqVSC13vImage_Buffer_":{"name":"vImage","abstract":"<p>vImage buffer containing the pixel data</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:ZFE9NeuralKitCSo7CGImage4loadFT4fromV10Foundation3URL_GSqS0__":{"name":"load(from:)","abstract":"<p>Initializes CGImage instance by loading an image from the specified file path.</p>","parent_name":"CGImage"},"Extensions/CGImage.html#/s:ZFE9NeuralKitCSo7CGImage4makeFT4fromGSaSf_5widthSi6heightSi_GSqS0__":{"name":"make(from:width:height:)","abstract":"<p>Initializes a CGImage instance from the given raw data.","parent_name":"CGImage"},"Extensions/CGImage.html":{"name":"CGImage","abstract":"Undocumented"},"Global Variables.html#/s:v9NeuralKit21CGImageFilterIdentityFCSo7CGImageS0_":{"name":"CGImageFilterIdentity","abstract":"<p>Identity filter</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"The following global variables are available globally."},"Extensions.html":{"name":"Extensions","abstract":"The following extensions are available globally."},"Functions.html":{"name":"Functions","abstract":"The following functions are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."},"Typealiases.html":{"name":"Typealiases","abstract":"The following typealiases are available globally."}}